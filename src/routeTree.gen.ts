/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SupportImport } from './routes/support'
import { Route as FeaturesImport } from './routes/features'
import { Route as DocumentationImport } from './routes/documentation'
import { Route as DevelopersImport } from './routes/developers'
import { Route as AboutImport } from './routes/about'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as DashboardTeamImport } from './routes/dashboard/team'
import { Route as DashboardAppsImport } from './routes/dashboard/apps'
import { Route as DashboardApiUsageImport } from './routes/dashboard/api-usage'
import { Route as DashboardApiKeysImport } from './routes/dashboard/api-keys'
import { Route as DashboardAnalyticsImport } from './routes/dashboard/analytics'
import { Route as DashboardSettingsImport } from './routes/dashboard/Settings'
import { Route as DashboardProfileImport } from './routes/dashboard/Profile'
import { Route as DashboardHelpImport } from './routes/dashboard/Help'
import { Route as DashboardDocumentationImport } from './routes/dashboard/Documentation'
import { Route as DashboardDecodeImport } from './routes/dashboard/Decode'
import { Route as DashboardBillingImport } from './routes/dashboard/Billing'
import { Route as AuthVerifyOtpImport } from './routes/auth/verify-otp'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthLoginImport } from './routes/auth/login'

// Create/Update Routes

const SupportRoute = SupportImport.update({
  id: '/support',
  path: '/support',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesRoute = FeaturesImport.update({
  id: '/features',
  path: '/features',
  getParentRoute: () => rootRoute,
} as any)

const DocumentationRoute = DocumentationImport.update({
  id: '/documentation',
  path: '/documentation',
  getParentRoute: () => rootRoute,
} as any)

const DevelopersRoute = DevelopersImport.update({
  id: '/developers',
  path: '/developers',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardTeamRoute = DashboardTeamImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardAppsRoute = DashboardAppsImport.update({
  id: '/apps',
  path: '/apps',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardApiUsageRoute = DashboardApiUsageImport.update({
  id: '/api-usage',
  path: '/api-usage',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardApiKeysRoute = DashboardApiKeysImport.update({
  id: '/api-keys',
  path: '/api-keys',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardAnalyticsRoute = DashboardAnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardSettingsRoute = DashboardSettingsImport.update({
  id: '/Settings',
  path: '/Settings',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProfileRoute = DashboardProfileImport.update({
  id: '/Profile',
  path: '/Profile',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardHelpRoute = DashboardHelpImport.update({
  id: '/Help',
  path: '/Help',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardDocumentationRoute = DashboardDocumentationImport.update({
  id: '/Documentation',
  path: '/Documentation',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardDecodeRoute = DashboardDecodeImport.update({
  id: '/Decode',
  path: '/Decode',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardBillingRoute = DashboardBillingImport.update({
  id: '/Billing',
  path: '/Billing',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const AuthVerifyOtpRoute = AuthVerifyOtpImport.update({
  id: '/auth/verify-otp',
  path: '/auth/verify-otp',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/developers': {
      id: '/developers'
      path: '/developers'
      fullPath: '/developers'
      preLoaderRoute: typeof DevelopersImport
      parentRoute: typeof rootRoute
    }
    '/documentation': {
      id: '/documentation'
      path: '/documentation'
      fullPath: '/documentation'
      preLoaderRoute: typeof DocumentationImport
      parentRoute: typeof rootRoute
    }
    '/features': {
      id: '/features'
      path: '/features'
      fullPath: '/features'
      preLoaderRoute: typeof FeaturesImport
      parentRoute: typeof rootRoute
    }
    '/support': {
      id: '/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof SupportImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/auth/verify-otp': {
      id: '/auth/verify-otp'
      path: '/auth/verify-otp'
      fullPath: '/auth/verify-otp'
      preLoaderRoute: typeof AuthVerifyOtpImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/Billing': {
      id: '/dashboard/Billing'
      path: '/Billing'
      fullPath: '/dashboard/Billing'
      preLoaderRoute: typeof DashboardBillingImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/Decode': {
      id: '/dashboard/Decode'
      path: '/Decode'
      fullPath: '/dashboard/Decode'
      preLoaderRoute: typeof DashboardDecodeImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/Documentation': {
      id: '/dashboard/Documentation'
      path: '/Documentation'
      fullPath: '/dashboard/Documentation'
      preLoaderRoute: typeof DashboardDocumentationImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/Help': {
      id: '/dashboard/Help'
      path: '/Help'
      fullPath: '/dashboard/Help'
      preLoaderRoute: typeof DashboardHelpImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/Profile': {
      id: '/dashboard/Profile'
      path: '/Profile'
      fullPath: '/dashboard/Profile'
      preLoaderRoute: typeof DashboardProfileImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/Settings': {
      id: '/dashboard/Settings'
      path: '/Settings'
      fullPath: '/dashboard/Settings'
      preLoaderRoute: typeof DashboardSettingsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/analytics': {
      id: '/dashboard/analytics'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof DashboardAnalyticsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/api-keys': {
      id: '/dashboard/api-keys'
      path: '/api-keys'
      fullPath: '/dashboard/api-keys'
      preLoaderRoute: typeof DashboardApiKeysImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/api-usage': {
      id: '/dashboard/api-usage'
      path: '/api-usage'
      fullPath: '/dashboard/api-usage'
      preLoaderRoute: typeof DashboardApiUsageImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/apps': {
      id: '/dashboard/apps'
      path: '/apps'
      fullPath: '/dashboard/apps'
      preLoaderRoute: typeof DashboardAppsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/team': {
      id: '/dashboard/team'
      path: '/team'
      fullPath: '/dashboard/team'
      preLoaderRoute: typeof DashboardTeamImport
      parentRoute: typeof DashboardRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteRouteChildren {
  DashboardBillingRoute: typeof DashboardBillingRoute
  DashboardDecodeRoute: typeof DashboardDecodeRoute
  DashboardDocumentationRoute: typeof DashboardDocumentationRoute
  DashboardHelpRoute: typeof DashboardHelpRoute
  DashboardProfileRoute: typeof DashboardProfileRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardAnalyticsRoute: typeof DashboardAnalyticsRoute
  DashboardApiKeysRoute: typeof DashboardApiKeysRoute
  DashboardApiUsageRoute: typeof DashboardApiUsageRoute
  DashboardAppsRoute: typeof DashboardAppsRoute
  DashboardTeamRoute: typeof DashboardTeamRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardBillingRoute: DashboardBillingRoute,
  DashboardDecodeRoute: DashboardDecodeRoute,
  DashboardDocumentationRoute: DashboardDocumentationRoute,
  DashboardHelpRoute: DashboardHelpRoute,
  DashboardProfileRoute: DashboardProfileRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardAnalyticsRoute: DashboardAnalyticsRoute,
  DashboardApiKeysRoute: DashboardApiKeysRoute,
  DashboardApiUsageRoute: DashboardApiUsageRoute,
  DashboardAppsRoute: DashboardAppsRoute,
  DashboardTeamRoute: DashboardTeamRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/developers': typeof DevelopersRoute
  '/documentation': typeof DocumentationRoute
  '/features': typeof FeaturesRoute
  '/support': typeof SupportRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-otp': typeof AuthVerifyOtpRoute
  '/dashboard/Billing': typeof DashboardBillingRoute
  '/dashboard/Decode': typeof DashboardDecodeRoute
  '/dashboard/Documentation': typeof DashboardDocumentationRoute
  '/dashboard/Help': typeof DashboardHelpRoute
  '/dashboard/Profile': typeof DashboardProfileRoute
  '/dashboard/Settings': typeof DashboardSettingsRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/api-keys': typeof DashboardApiKeysRoute
  '/dashboard/api-usage': typeof DashboardApiUsageRoute
  '/dashboard/apps': typeof DashboardAppsRoute
  '/dashboard/team': typeof DashboardTeamRoute
  '/auth': typeof AuthIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/developers': typeof DevelopersRoute
  '/documentation': typeof DocumentationRoute
  '/features': typeof FeaturesRoute
  '/support': typeof SupportRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-otp': typeof AuthVerifyOtpRoute
  '/dashboard/Billing': typeof DashboardBillingRoute
  '/dashboard/Decode': typeof DashboardDecodeRoute
  '/dashboard/Documentation': typeof DashboardDocumentationRoute
  '/dashboard/Help': typeof DashboardHelpRoute
  '/dashboard/Profile': typeof DashboardProfileRoute
  '/dashboard/Settings': typeof DashboardSettingsRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/api-keys': typeof DashboardApiKeysRoute
  '/dashboard/api-usage': typeof DashboardApiUsageRoute
  '/dashboard/apps': typeof DashboardAppsRoute
  '/dashboard/team': typeof DashboardTeamRoute
  '/auth': typeof AuthIndexRoute
  '/dashboard': typeof DashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/developers': typeof DevelopersRoute
  '/documentation': typeof DocumentationRoute
  '/features': typeof FeaturesRoute
  '/support': typeof SupportRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/auth/verify-otp': typeof AuthVerifyOtpRoute
  '/dashboard/Billing': typeof DashboardBillingRoute
  '/dashboard/Decode': typeof DashboardDecodeRoute
  '/dashboard/Documentation': typeof DashboardDocumentationRoute
  '/dashboard/Help': typeof DashboardHelpRoute
  '/dashboard/Profile': typeof DashboardProfileRoute
  '/dashboard/Settings': typeof DashboardSettingsRoute
  '/dashboard/analytics': typeof DashboardAnalyticsRoute
  '/dashboard/api-keys': typeof DashboardApiKeysRoute
  '/dashboard/api-usage': typeof DashboardApiUsageRoute
  '/dashboard/apps': typeof DashboardAppsRoute
  '/dashboard/team': typeof DashboardTeamRoute
  '/auth/': typeof AuthIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/about'
    | '/developers'
    | '/documentation'
    | '/features'
    | '/support'
    | '/auth/login'
    | '/auth/signup'
    | '/auth/verify-otp'
    | '/dashboard/Billing'
    | '/dashboard/Decode'
    | '/dashboard/Documentation'
    | '/dashboard/Help'
    | '/dashboard/Profile'
    | '/dashboard/Settings'
    | '/dashboard/analytics'
    | '/dashboard/api-keys'
    | '/dashboard/api-usage'
    | '/dashboard/apps'
    | '/dashboard/team'
    | '/auth'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/developers'
    | '/documentation'
    | '/features'
    | '/support'
    | '/auth/login'
    | '/auth/signup'
    | '/auth/verify-otp'
    | '/dashboard/Billing'
    | '/dashboard/Decode'
    | '/dashboard/Documentation'
    | '/dashboard/Help'
    | '/dashboard/Profile'
    | '/dashboard/Settings'
    | '/dashboard/analytics'
    | '/dashboard/api-keys'
    | '/dashboard/api-usage'
    | '/dashboard/apps'
    | '/dashboard/team'
    | '/auth'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/about'
    | '/developers'
    | '/documentation'
    | '/features'
    | '/support'
    | '/auth/login'
    | '/auth/signup'
    | '/auth/verify-otp'
    | '/dashboard/Billing'
    | '/dashboard/Decode'
    | '/dashboard/Documentation'
    | '/dashboard/Help'
    | '/dashboard/Profile'
    | '/dashboard/Settings'
    | '/dashboard/analytics'
    | '/dashboard/api-keys'
    | '/dashboard/api-usage'
    | '/dashboard/apps'
    | '/dashboard/team'
    | '/auth/'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  DevelopersRoute: typeof DevelopersRoute
  DocumentationRoute: typeof DocumentationRoute
  FeaturesRoute: typeof FeaturesRoute
  SupportRoute: typeof SupportRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthVerifyOtpRoute: typeof AuthVerifyOtpRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  DevelopersRoute: DevelopersRoute,
  DocumentationRoute: DocumentationRoute,
  FeaturesRoute: FeaturesRoute,
  SupportRoute: SupportRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthVerifyOtpRoute: AuthVerifyOtpRoute,
  AuthIndexRoute: AuthIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/about",
        "/developers",
        "/documentation",
        "/features",
        "/support",
        "/auth/login",
        "/auth/signup",
        "/auth/verify-otp",
        "/auth/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/Billing",
        "/dashboard/Decode",
        "/dashboard/Documentation",
        "/dashboard/Help",
        "/dashboard/Profile",
        "/dashboard/Settings",
        "/dashboard/analytics",
        "/dashboard/api-keys",
        "/dashboard/api-usage",
        "/dashboard/apps",
        "/dashboard/team",
        "/dashboard/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/developers": {
      "filePath": "developers.tsx"
    },
    "/documentation": {
      "filePath": "documentation.tsx"
    },
    "/features": {
      "filePath": "features.tsx"
    },
    "/support": {
      "filePath": "support.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/auth/verify-otp": {
      "filePath": "auth/verify-otp.tsx"
    },
    "/dashboard/Billing": {
      "filePath": "dashboard/Billing.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/Decode": {
      "filePath": "dashboard/Decode.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/Documentation": {
      "filePath": "dashboard/Documentation.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/Help": {
      "filePath": "dashboard/Help.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/Profile": {
      "filePath": "dashboard/Profile.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/Settings": {
      "filePath": "dashboard/Settings.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/analytics": {
      "filePath": "dashboard/analytics.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/api-keys": {
      "filePath": "dashboard/api-keys.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/api-usage": {
      "filePath": "dashboard/api-usage.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/apps": {
      "filePath": "dashboard/apps.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/team": {
      "filePath": "dashboard/team.tsx",
      "parent": "/dashboard"
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
