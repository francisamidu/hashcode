/* eslint-disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.
// Import Routes
import { Route as rootRoute } from './routes/__root';
import { Route as FeaturesImport } from './routes/features';
import { Route as DocumentationImport } from './routes/documentation';
import { Route as DevelopersImport } from './routes/developers';
import { Route as AboutImport } from './routes/about';
import { Route as DashboardRouteImport } from './routes/dashboard/route';
import { Route as IndexImport } from './routes/index';
import { Route as DashboardIndexImport } from './routes/dashboard/index';
import { Route as AuthIndexImport } from './routes/auth/index';
import { Route as DashboardSettingsImport } from './routes/dashboard/Settings';
import { Route as DashboardProfileImport } from './routes/dashboard/Profile';
import { Route as DashboardHelpImport } from './routes/dashboard/Help';
import { Route as DashboardDocumentationImport } from './routes/dashboard/Documentation';
import { Route as DashboardDecodeImport } from './routes/dashboard/Decode';
import { Route as DashboardBillingImport } from './routes/dashboard/Billing';
import { Route as DashboardApiUsageImport } from './routes/dashboard/Api-Usage';
import { Route as DashboardApiKeysImport } from './routes/dashboard/Api-Keys';
import { Route as DashboardAnalyticsImport } from './routes/dashboard/Analytics';
import { Route as AuthSignupImport } from './routes/auth/signup';
import { Route as AuthLoginImport } from './routes/auth/login';
// Create/Update Routes
const FeaturesRoute = FeaturesImport.update({
    id: '/features',
    path: '/features',
    getParentRoute: () => rootRoute,
});
const DocumentationRoute = DocumentationImport.update({
    id: '/documentation',
    path: '/documentation',
    getParentRoute: () => rootRoute,
});
const DevelopersRoute = DevelopersImport.update({
    id: '/developers',
    path: '/developers',
    getParentRoute: () => rootRoute,
});
const AboutRoute = AboutImport.update({
    id: '/about',
    path: '/about',
    getParentRoute: () => rootRoute,
});
const DashboardRouteRoute = DashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => rootRoute,
});
const IndexRoute = IndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => rootRoute,
});
const DashboardIndexRoute = DashboardIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardRouteRoute,
});
const AuthIndexRoute = AuthIndexImport.update({
    id: '/auth/',
    path: '/auth/',
    getParentRoute: () => rootRoute,
});
const DashboardSettingsRoute = DashboardSettingsImport.update({
    id: '/Settings',
    path: '/Settings',
    getParentRoute: () => DashboardRouteRoute,
});
const DashboardProfileRoute = DashboardProfileImport.update({
    id: '/Profile',
    path: '/Profile',
    getParentRoute: () => DashboardRouteRoute,
});
const DashboardHelpRoute = DashboardHelpImport.update({
    id: '/Help',
    path: '/Help',
    getParentRoute: () => DashboardRouteRoute,
});
const DashboardDocumentationRoute = DashboardDocumentationImport.update({
    id: '/Documentation',
    path: '/Documentation',
    getParentRoute: () => DashboardRouteRoute,
});
const DashboardDecodeRoute = DashboardDecodeImport.update({
    id: '/Decode',
    path: '/Decode',
    getParentRoute: () => DashboardRouteRoute,
});
const DashboardBillingRoute = DashboardBillingImport.update({
    id: '/Billing',
    path: '/Billing',
    getParentRoute: () => DashboardRouteRoute,
});
const DashboardApiUsageRoute = DashboardApiUsageImport.update({
    id: '/Api-Usage',
    path: '/Api-Usage',
    getParentRoute: () => DashboardRouteRoute,
});
const DashboardApiKeysRoute = DashboardApiKeysImport.update({
    id: '/Api-Keys',
    path: '/Api-Keys',
    getParentRoute: () => DashboardRouteRoute,
});
const DashboardAnalyticsRoute = DashboardAnalyticsImport.update({
    id: '/Analytics',
    path: '/Analytics',
    getParentRoute: () => DashboardRouteRoute,
});
const AuthSignupRoute = AuthSignupImport.update({
    id: '/auth/signup',
    path: '/auth/signup',
    getParentRoute: () => rootRoute,
});
const AuthLoginRoute = AuthLoginImport.update({
    id: '/auth/login',
    path: '/auth/login',
    getParentRoute: () => rootRoute,
});
const DashboardRouteRouteChildren = {
    DashboardAnalyticsRoute: DashboardAnalyticsRoute,
    DashboardApiKeysRoute: DashboardApiKeysRoute,
    DashboardApiUsageRoute: DashboardApiUsageRoute,
    DashboardBillingRoute: DashboardBillingRoute,
    DashboardDecodeRoute: DashboardDecodeRoute,
    DashboardDocumentationRoute: DashboardDocumentationRoute,
    DashboardHelpRoute: DashboardHelpRoute,
    DashboardProfileRoute: DashboardProfileRoute,
    DashboardSettingsRoute: DashboardSettingsRoute,
    DashboardIndexRoute: DashboardIndexRoute,
};
const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(DashboardRouteRouteChildren);
const rootRouteChildren = {
    IndexRoute: IndexRoute,
    DashboardRouteRoute: DashboardRouteRouteWithChildren,
    AboutRoute: AboutRoute,
    DevelopersRoute: DevelopersRoute,
    DocumentationRoute: DocumentationRoute,
    FeaturesRoute: FeaturesRoute,
    AuthLoginRoute: AuthLoginRoute,
    AuthSignupRoute: AuthSignupRoute,
    AuthIndexRoute: AuthIndexRoute,
};
export const routeTree = rootRoute
    ._addFileChildren(rootRouteChildren)
    ._addFileTypes();
/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/about",
        "/developers",
        "/documentation",
        "/features",
        "/auth/login",
        "/auth/signup",
        "/auth/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/Analytics",
        "/dashboard/Api-Keys",
        "/dashboard/Api-Usage",
        "/dashboard/Billing",
        "/dashboard/Decode",
        "/dashboard/Documentation",
        "/dashboard/Help",
        "/dashboard/Profile",
        "/dashboard/Settings",
        "/dashboard/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/developers": {
      "filePath": "developers.tsx"
    },
    "/documentation": {
      "filePath": "documentation.tsx"
    },
    "/features": {
      "filePath": "features.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/dashboard/Analytics": {
      "filePath": "dashboard/Analytics.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/Api-Keys": {
      "filePath": "dashboard/Api-Keys.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/Api-Usage": {
      "filePath": "dashboard/Api-Usage.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/Billing": {
      "filePath": "dashboard/Billing.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/Decode": {
      "filePath": "dashboard/Decode.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/Documentation": {
      "filePath": "dashboard/Documentation.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/Help": {
      "filePath": "dashboard/Help.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/Profile": {
      "filePath": "dashboard/Profile.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/Settings": {
      "filePath": "dashboard/Settings.tsx",
      "parent": "/dashboard"
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
