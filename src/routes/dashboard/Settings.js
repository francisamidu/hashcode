import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { createFileRoute } from '@tanstack/react-router';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Switch } from '@/components/ui/switch';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
export const Route = createFileRoute('/dashboard/Settings')({
    component: RouteComponent
});
function RouteComponent() {
    return (_jsxs("div", { className: "container mx-auto p-6", children: [_jsx("h1", { className: "mb-8 text-2xl font-bold", children: "Settings" }), _jsxs(Tabs, { defaultValue: "profile", className: "space-y-6", children: [_jsxs(TabsList, { className: "w-full justify-start border-b pb-0 mb-6", children: [_jsx(TabsTrigger, { value: "profile", className: "rounded-b-none data-[state=active]:border-b-2 data-[state=active]:border-indigo-600", children: "Profile" }), _jsx(TabsTrigger, { value: "account", className: "rounded-b-none data-[state=active]:border-b-2 data-[state=active]:border-indigo-600", children: "Account" }), _jsx(TabsTrigger, { value: "security", className: "rounded-b-none data-[state=active]:border-b-2 data-[state=active]:border-indigo-600", children: "Security" }), _jsx(TabsTrigger, { value: "notifications", className: "rounded-b-none data-[state=active]:border-b-2 data-[state=active]:border-indigo-600", children: "Notifications" }), _jsx(TabsTrigger, { value: "api", className: "rounded-b-none data-[state=active]:border-b-2 data-[state=active]:border-indigo-600", children: "API" })] }), _jsx(TabsContent, { value: "profile", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Profile Information" }), _jsx(CardDescription, { children: "Update your profile information" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center space-x-4", children: [_jsxs(Avatar, { className: "h-16 w-16", children: [_jsx(AvatarImage, { src: "/placeholder.svg?height=40&width=40", alt: "User" }), _jsx(AvatarFallback, { children: "IV" })] }), _jsxs("div", { children: [_jsx(Button, { variant: "outline", size: "sm", children: "Change Avatar" }), _jsx("p", { className: "mt-1 text-xs text-gray-500", children: "JPG, GIF or PNG. 1MB max." })] })] }), _jsxs("div", { className: "grid gap-4 md:grid-cols-2", children: [_jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "firstName", children: "First Name" }), _jsx(Input, { id: "firstName", defaultValue: "Ivan" })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "lastName", children: "Last Name" }), _jsx(Input, { id: "lastName", defaultValue: "Veniamin" })] })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "email", children: "Email" }), _jsx(Input, { id: "email", type: "email", defaultValue: "ivan@hashcode.dev" })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "company", children: "Company" }), _jsx(Input, { id: "company", defaultValue: "Ivan's Business" })] }), _jsx(Button, { children: "Save Changes" })] })] }) }), _jsx(TabsContent, { value: "account", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Account Settings" }), _jsx(CardDescription, { children: "Manage your account preferences" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "language", children: "Language" }), _jsxs(Select, { defaultValue: "en", children: [_jsx(SelectTrigger, { id: "language", children: _jsx(SelectValue, { placeholder: "Select language" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "en", children: "English" }), _jsx(SelectItem, { value: "sw", children: "Swahili" }), _jsx(SelectItem, { value: "fr", children: "French" })] })] })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "timezone", children: "Timezone" }), _jsxs(Select, { defaultValue: "eat", children: [_jsx(SelectTrigger, { id: "timezone", children: _jsx(SelectValue, { placeholder: "Select timezone" }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "eat", children: "East Africa Time (EAT)" }), _jsx(SelectItem, { value: "utc", children: "UTC" }), _jsx(SelectItem, { value: "est", children: "Eastern Standard Time (EST)" })] })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-sm font-medium", children: "Delete Account" }), _jsx("p", { className: "text-sm text-gray-500", children: "Permanently delete your account and all data" })] }), _jsx(Button, { variant: "destructive", children: "Delete Account" })] })] })] }) }), _jsx(TabsContent, { value: "security", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Security Settings" }), _jsx(CardDescription, { children: "Manage your security preferences" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-sm font-medium", children: "Change Password" }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "currentPassword", children: "Current Password" }), _jsx(Input, { id: "currentPassword", type: "password" })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "newPassword", children: "New Password" }), _jsx(Input, { id: "newPassword", type: "password" })] }), _jsxs("div", { className: "grid gap-2", children: [_jsx(Label, { htmlFor: "confirmPassword", children: "Confirm New Password" }), _jsx(Input, { id: "confirmPassword", type: "password" })] }), _jsx(Button, { children: "Update Password" })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-sm font-medium", children: "Two-Factor Authentication" }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("div", { children: _jsx("p", { className: "text-sm", children: "Enable two-factor authentication for added security" }) }), _jsx(Switch, {})] })] })] })] }) }), _jsx(TabsContent, { value: "notifications", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Notification Settings" }), _jsx(CardDescription, { children: "Manage your notification preferences" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-sm font-medium", children: "Email Notifications" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx(Label, { htmlFor: "emailTransactions", children: "Transaction updates" }), _jsx(Switch, { id: "emailTransactions", defaultChecked: true })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx(Label, { htmlFor: "emailMarketing", children: "Marketing emails" }), _jsx(Switch, { id: "emailMarketing" })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx(Label, { htmlFor: "emailSecurity", children: "Security alerts" }), _jsx(Switch, { id: "emailSecurity", defaultChecked: true })] })] })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-sm font-medium", children: "Push Notifications" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx(Label, { htmlFor: "pushTransactions", children: "Transaction updates" }), _jsx(Switch, { id: "pushTransactions", defaultChecked: true })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx(Label, { htmlFor: "pushSecurity", children: "Security alerts" }), _jsx(Switch, { id: "pushSecurity", defaultChecked: true })] })] })] })] })] }) }), _jsx(TabsContent, { value: "api", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "API Settings" }), _jsx(CardDescription, { children: "Manage your API keys and webhooks" })] }), _jsxs(CardContent, { className: "space-y-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h3", { className: "text-sm font-medium", children: "API Keys" }), _jsx("div", { className: "rounded-md border p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Production API Key" }), _jsx("p", { className: "text-sm text-gray-500", children: "Last used: 2 hours ago" })] }), _jsxs("div", { className: "flex space-x-2", children: [_jsx(Button, { variant: "outline", size: "sm", children: "Show" }), _jsx(Button, { variant: "outline", size: "sm", children: "Regenerate" })] })] }) }), _jsx("div", { className: "rounded-md border p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Test API Key" }), _jsx("p", { className: "text-sm text-gray-500", children: "Last used: 1 day ago" })] }), _jsxs("div", { className: "flex space-x-2", children: [_jsx(Button, { variant: "outline", size: "sm", children: "Show" }), _jsx(Button, { variant: "outline", size: "sm", children: "Regenerate" })] })] }) })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("h3", { className: "text-sm font-medium", children: "Webhooks" }), _jsx(Button, { variant: "outline", size: "sm", children: "Add Webhook" })] }), _jsx("div", { className: "rounded-md border p-4", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "https://example.com/webhook" }), _jsx("p", { className: "text-sm text-gray-500", children: "Events: transaction.processed" })] }), _jsxs("div", { className: "flex space-x-2", children: [_jsx(Button, { variant: "outline", size: "sm", children: "Edit" }), _jsx(Button, { variant: "outline", size: "sm", className: "text-red-600", children: "Delete" })] })] }) })] })] })] }) })] })] }));
}
